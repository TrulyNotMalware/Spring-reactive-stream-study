plugins {
    id 'org.springframework.boot' version '2.5.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'com.google.cloud.tools.jib' version '2.1.0'
}

group = 'com.spring'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
targetCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}


ext['log4j2.version'] = '2.17.1'
ext['spring-framework.version'] = '5.3.20'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    //Reactive MongoDB
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'

    //Swagger Supports
    implementation "io.springfox:springfox-boot-starter:3.0.0"
    implementation "io.springfox:springfox-swagger-ui:3.0.0"

    //Developer's tools support
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'io.projectreactor.tools:blockhound:1.0.6.RELEASE'

    //Kubernetes Supports
    implementation 'io.fabric8:kubernetes-client:5.12.2'
    implementation 'io.fabric8:kubernetes-server-mock:5.12.2'
//	implementation 'io.fabric8:kubernetes-api:3.0.12'
    implementation 'io.fabric8:kubernetes-model-core:5.12.2'
    implementation 'io.fabric8:kubernetes-model-common:5.12.2'
    implementation 'io.fabric8:kubernetes-model-batch:5.12.2'
    implementation 'io.fabric8:kubernetes-model-certificates:5.12.2'
//	implementation 'io.fabric8:kubernetes-model-annotator:4.13.3'

    //BlockHound Tests
//    testImplementation 'io.projectreactor.tools:blockhound-junit-platform:1.0.6.RELEASE'

    //[Manage]Actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    //RestDocs - asciidoctor
//    implementation 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'

    //Hateos
    implementation (group: 'org.springframework.hateoas', name: 'spring-hateoas'){
        // Spring mvc exclude
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-web'
    }

    //Junit5 -> 버전 올리면 에러남. 2.5.X 에서는 이 버전의 JUnit 을 쓰자.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

    //Json
    implementation 'org.json:json:20220320'

    //test Containers
    testImplementation 'org.testcontainers:testcontainers:1.17.2'
    testImplementation 'org.testcontainers:junit-jupiter:1.17.2'
    implementation 'org.testcontainers:testcontainers-bom:1.17.2'

    //Broker - Rabbit Mq
    testImplementation 'org.testcontainers:rabbitmq:1.17.1'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'

    //RSocket
    implementation 'org.springframework.boot:spring-boot-starter-rsocket'

    //Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    //jwt
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.assertj:assertj-core:3.23.1'

    //MariaDB
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    runtimeOnly 'org.mariadb:r2dbc-mariadb'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
}

test {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
        showCauses = true
        showExceptions = true
        showStackTraces = true
        exceptionFormat = 'full'
    }
}

jib {
    from {
        image = "eclipse-temurin:11.0.15_10-jdk"
    }
    to {
        image = "testing/${project.name}"
        tags = ["latest", "${project.name}-${project.version}".toString()]
    }
    container {
        volumes = ['/tmp']
        jvmFlags = ["-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=9999"]
        ports = ['8080']
    }
}